name: Build and deploy "Bank with Love" project
on:
  push:
    branches:
      - main
      - develop
      - deploy
env:
  EMAIL_USERNAME: ${{ secrets.EMAIL_USERNAME }}
  EMAIL_PASSWORD: ${{ secrets.EMAIL_PASSWORD }}
  KAFKA_URL: ${{ secrets.KAFKA_URL }}
  DB_URL: ${{ secrets.DB_URL }}
  DB_USERNAME: ${{ secrets.DB_USERNAME }}
  DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
  CALCULATOR_URL: ${{ secrets.CALCULATOR_URL }}
  DEAL_URL: ${{ secrets.DEAL_URL }}
  STATEMENT_URL: ${{ secrets.STATEMENT_URL }}
  DOSSIER_URL: ${{ secrets.DOSSIER_URL }}
  GATEWAY_URL: ${{ secrets.GATEWAY_URL }}
  ADMIN_USERNAME: ${{ secrets.ADMIN_USERNAME }}
  ADMIN_PASSWORD: ${{ secrets.ADMIN_PASSWORD }}

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17 for x64
        uses: actions/setup-java@v4
        with:
            java-version: '21'
            distribution: 'corretto'
            architecture: x64
      - name: Set up Maven
        uses: stCarolas/setup-maven@v5
        with:
          maven-version: 3.8.2
      - name: Run tests
        run: mvn -B clean test
      - name: Generate reports
        run: mvn -B jacoco:report
      - name: List all JaCoCo reports
        run: find . -name "jacoco.xml" -type f
      - name: Upload coverage reports to Codecov with GitHub Action
        uses: codecov/codecov-action@v5
        with:
          files: "*/target/site/jacoco/jacoco.xml"
          root_dir: ${{ github.workspace }}
          fail_ci_if_error: true
          verbose: true
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
      - name: SonarCloud Scan
        run: mvn -B clean verify -Psonar -Dsonar.login=${{ secrets.SONAR_TOKEN }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Build Maven projects
        run: mvn clean package -DskipTests
      - name: Upload entire project as artifact
        uses: actions/upload-artifact@v4
        with:
          name: project-build
          path: |
            .
            !.git
            !.github
          retention-days: 1

  deploy:
    runs-on: self-hosted
    needs: build-and-test
    steps:
      - name: Clean workspace
        run: rm -rf rm -rf ${{ github.workspace }}/*

      - name: Download project artifact
        uses: actions/download-artifact@v4
        with:
          name: project-build
          path: ${{ github.workspace }}

      - name: Create .env file
        run: |
          cat > .env << EOF
          EMAIL_USERNAME=${{ secrets.EMAIL_USERNAME }}
          EMAIL_PASSWORD=${{ secrets.EMAIL_PASSWORD }}
          KAFKA_URL=${{ secrets.KAFKA_URL }}
          DB_URL=${{ secrets.DB_URL }}
          DB_USERNAME=${{ secrets.DB_USERNAME }}
          DB_PASSWORD=${{ secrets.DB_PASSWORD }}
          CALCULATOR_URL=${{ secrets.CALCULATOR_URL }}
          DEAL_URL=${{ secrets.DEAL_URL }}
          STATEMENT_URL=${{ secrets.STATEMENT_URL }}
          DOSSIER_URL=${{ secrets.DOSSIER_URL }}
          GATEWAY_URL=${{ secrets.GATEWAY_URL }}
          ADMIN_USERNAME=${{ secrets.ADMIN_USERNAME }}
          ADMIN_PASSWORD=${{ secrets.ADMIN_PASSWORD }}
          EOF

      - name: Make scripts executable
        run: |
          find ${{ github.workspace }} -name "*.sh" -exec chmod +x {} \;
          ls -la

      - name: Build Docker images
        run: docker compose build

      - name: Deploy with Docker Compose
        run: |
          docker compose down || true
          docker compose up -d
          sleep 30
          docker compose ps